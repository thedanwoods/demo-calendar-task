{"version":3,"sources":["reducers/initialState.js","reducers/selectedDateReducer.js","reducers/formReducer.js","reducers/remindersReducer.js","reducers/index.js","store/index.js","components/Day/component.jsx","components/Day/index.jsx","actions/form.js","components/Month/component.jsx","actions/setDate.js","components/Month/index.jsx","components/ReminderEditor/component.jsx","components/ReminderEditor/index.jsx","components/Layout/component.jsx","components/Layout/index.jsx","App.jsx","index.jsx"],"names":["initialState","selectedDate","form","open","color","r","g","b","reminder","reminderDate","reminders","selectedDateReducer","state","arguments","length","undefined","action","type","date","toUTCString","formReducer","Object","objectSpread","time","id","remindersReducer","toConsumableArray","filter","concat","combineReducers","createStore","reduxCreateStore","rootReducer","applyMiddleware","thunk","Day","_ref","addReminder","editItem","day","react_default","a","createElement","className","role","onClick","map","key","style","e","stopPropagation","format","byDateAscending","Date","connect","ownProps","isSameDay","sort","dispatch","setHours","setMinutes","setSeconds","setMilliseconds","Math","ceil","getMinutes","getHours","createReminder","dayNames","Month","onChangeMonth","first","startOfMonth","last","endOfMonth","paddedDays","Array","from","getDay","getDate","keys","el","index","setDate","iconContext","Provider","value","size","subMonths","md","addMonths","components_Day","modalStyles","content","bottom","padding","position","left","top","right","transform","width","maxWidth","ReminderEditor","formSubmitted","formClosed","itemDeleted","_useState","useState","_useState2","slicedToArray","setReminderDate","_useState3","_useState4","colorPicker","setColorPicker","_useState5","_useState6","setColor","_useState7","_useState8","setReminder","useEffect","lib_default","isOpen","contentLabel","onSubmit","preventDefault","autoFocus","placeholder","onChange","target","required","maxLength","build_default","options","dateFormat","defaultDate","enableTime","time_24hr","onClose","d","react_color_lib","onChangeComplete","selectedColor","rgb","shortid","generate","Modal","setAppElement","Layout","onMount","formOpen","components_Month","components_ReminderEditor","store","App","es","components_Layout","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"kTAWeA,EAXM,CACnBC,aAAc,GACdC,KAAM,CACJC,MAAM,EACNC,MAAO,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACxBC,SAAU,GACVC,aAAc,IAEhBC,UAAW,ICGEC,EATa,WAAoD,IAAnDC,EAAmDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3Cb,EAAaC,aAAce,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACvE,OAAQG,EAAOC,MACb,IAAK,gBACH,OAAOD,EAAOE,KAAKC,cACrB,QACE,OAAOP,YCuBEQ,EA5BK,WAA4C,IAA3CR,EAA2CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnCb,EAAaE,KAAMc,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACvD,OAAQG,EAAOC,MACb,IAAK,cACH,OAAOI,OAAAC,EAAA,EAAAD,CAAA,GACFT,EADL,CAEET,MAAM,EACNoB,KAAMP,EAAOO,MAAQ,GACrBC,GAAI,KAER,IAAK,cACL,IAAK,eACL,IAAK,iBACH,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFrB,EAAaE,MAEpB,IAAK,cACH,MAAO,CACLC,MAAM,EACNoB,KAAMP,EAAOR,SAASC,aACtBe,GAAIR,EAAOR,SAASgB,GACpBpB,MAAOY,EAAOR,SAASJ,MACvBI,SAAUQ,EAAOR,SAASA,UAE9B,QACE,OAAOI,YCJEa,EApBU,WAAiD,IAAhDb,EAAgDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxCb,EAAaU,UAAWM,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACjE,OAAQG,EAAOC,MACb,IAAK,iBACH,OAAOI,OAAAK,EAAA,EAAAL,CACFT,EAAMe,OAAO,SAAAnB,GAAQ,OAAIA,EAASgB,KAAOR,EAAOd,KAAKsB,MAD1DI,OAAA,CAAAP,OAAAC,EAAA,EAAAD,CAAA,GAGOL,EAAOd,QAIhB,IAAK,eACH,OAAOmB,OAAAK,EAAA,EAAAL,CACFT,EAAMe,OAAO,SAAAnB,GAAQ,OAAIA,EAASgB,KAAOR,EAAOQ,MAGvD,QACE,OAAOZ,ICbEiB,cAAgB,CAC7B5B,eACAC,OACAQ,cCDaoB,EAFK,kBAClBC,YAAiBC,EAAahC,EAAciC,YAAgBC,wDC6C/CC,UA7CH,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,SAAUC,EAA1BH,EAA0BG,IAAK7B,EAA/B0B,EAA+B1B,UAA/B,MACE,UAAZ6B,EAAIA,IACFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEfH,EAAAC,EAAAC,cAAA,OACEE,KAAK,SACLC,QAAS,kBAAMR,EAAYE,EAAIhB,OAC/BoB,UAAU,mBAETJ,EAAIA,IACJ7B,EAAUI,OACT0B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACXjC,EAAUoC,IAAI,SAAAtC,GAAQ,OACrBgC,EAAAC,EAAAC,cAAA,MAAIK,IAAKvC,EAASgB,IAChBgB,EAAAC,EAAAC,cAAA,OACEC,UAAU,qBACVC,KAAK,SACLI,MAAO,CACL5C,MAAK,OAAAwB,OAASpB,EAASJ,MAAMC,EAAxB,KAAAuB,OACHpB,EAASJ,MAAME,EADZ,KAAAsB,OAEDpB,EAASJ,MAAMG,EAFd,MAIPsC,QAAS,SAAAI,GACPX,EAAS9B,GACTyC,EAAEC,oBAGHC,iBAAO3C,EAASC,aAAc,SAbjC,IAa4CD,EAASA,cAM3D,wBClCR,IAAM4C,EAAkB,SAACX,EAAGlC,GAAJ,OACtB,IAAI8C,KAAKZ,EAAEhC,cAAgB,IAAI4C,KAAK9C,EAAEE,eAqBzB6C,cAnBgB,SAAC1C,EAAO2C,GACrC,MAAO,CACL7C,UAAWE,EAAMF,UACdiB,OAAO,SAAAnB,GAAQ,OACdgD,oBAAU,IAAIH,KAAK7C,EAASC,cAAe8C,EAAShB,IAAIhB,QAEzDkC,KAAKL,KAIsB,SAAAM,GAAQ,MAAK,CAC7CrB,YAAa,SAAAd,GACXmC,ECVG,SAAwBnC,GAU7B,MAAO,CAAEN,KAAM,cAAeO,GAAI,KAAMD,KAPxBoC,mBACdC,qBACEC,qBAAWC,0BAAgBvC,EAAM,GAAI,GACG,EAAxCwC,KAAKC,KAAKC,qBAAW,IAAIZ,MAAU,IAErCa,mBAAS,IAAIb,OAEuClC,eDA3CgD,CAAe5C,KAE1Be,SAAU,SAAAd,GACRkC,ECYK,CAAEzC,KAAM,cAAeT,SDZVgB,OAIP8B,CAGbnB,GEXIiC,UAAW,CACf,SACA,SACA,UACA,YACA,WACA,SACA,aA0DaC,EAvDD,SAAAjC,GAA6B,IAA1BkC,EAA0BlC,EAA1BkC,cAAe/C,EAAWa,EAAXb,KACxBgD,EAAQC,uBAAajD,GACrBkD,EAAOC,qBAAWnD,GAClBoD,EAAatD,OAAAK,EAAA,EAAAL,CACduD,MAAMC,KAAK,IAAID,MAAME,iBAAOP,MADd3C,OAAAP,OAAAK,EAAA,EAAAL,CAEduD,MAAMC,KAAK,IAAID,MAAMG,kBAAQN,IAAOO,QAAQlC,IAAI,SAAAmC,GAAE,OAAIA,EAAK,KAF7C5D,OAAAK,EAAA,EAAAL,CAGduD,MAAMC,KAAK,IAAID,MAAM,EAAIE,iBAAOL,OACnC3B,IAAI,SAACP,EAAK2C,GAAN,MAAiB,CACrB1D,GAAI0D,EACJ3C,SAAaxB,IAARwB,EAAoB,QAApB,GAAAX,OAAiCW,GACtChB,KAAM4D,kBAAQ5D,EAAMgB,MAGtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC0C,EAAA,EAAYC,SAAb,CAAsBC,MAAO,CAAEC,KAAM,QACnC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACV1B,KAAK,SACL4B,QAAS,kBAAMyB,EAAckB,oBAAUjE,EAAM,MAE7CiB,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,QAGJjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UAAKS,iBAAO5B,EAAM,eAEpBiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACV1B,KAAK,SACL4B,QAAS,kBAAMyB,EAAcoB,oBAAUnE,EAAM,MAE7CiB,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,QAGHrB,EAAStB,IAAI,SAAAP,GAAG,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBI,IAAKR,GACnCA,KAGJoC,EAAW7B,IAAI,SAAAmC,GAAE,OAChBzC,EAAAC,EAAAC,cAACiD,EAAD,CAAKpD,IAAK0C,EAAIlC,IAAKkC,EAAGzD,UCjEjB2D,EAPC,SAAAjE,GACd,MAAO,CACLD,KAAM,gBACNC,SCSWoC,cARgB,SAAA1C,GAAK,MAAK,CAAEF,UAAWE,EAAMF,YAE1B,SAAAgD,GAAQ,MAAK,CAC7CY,cAAe,SAAApD,GACbwC,EAASyB,EAAQjE,OAINoC,CAGbe,sCCLIuB,iBAAc,CAClBC,QAAS,CACPC,OAAQ,OACRC,QAAS,OACTC,SAAU,QACVC,KAAM,MACNC,IAAK,MACLC,MAAO,OACPC,UAAW,uBACXC,MAAO,MACPC,SAAU,WAwHCC,EApHQ,SAAAnE,GAAsD,IAAnDlC,EAAmDkC,EAAnDlC,KAAMsG,EAA6CpE,EAA7CoE,cAAeC,EAA8BrE,EAA9BqE,WAAYC,EAAkBtE,EAAlBsE,YAAkBC,EACnCC,mBAAS,MAD0BC,EAAAxF,OAAAyF,EAAA,EAAAzF,CAAAsF,EAAA,GACpElG,EADoEoG,EAAA,GACtDE,EADsDF,EAAA,GAAAG,EAErCJ,oBAAS,GAF4BK,EAAA5F,OAAAyF,EAAA,EAAAzF,CAAA2F,EAAA,GAEpEE,EAFoED,EAAA,GAEvDE,EAFuDF,EAAA,GAAAG,EAGjDR,mBAAS,CAAEvG,EAAG,IAAKC,EAAG,IAAKC,EAAG,MAHmB8G,EAAAhG,OAAAyF,EAAA,EAAAzF,CAAA+F,EAAA,GAGpEhH,EAHoEiH,EAAA,GAG7DC,EAH6DD,EAAA,GAAAE,EAI3CX,mBAAS,IAJkCY,EAAAnG,OAAAyF,EAAA,EAAAzF,CAAAkG,EAAA,GAIpE/G,EAJoEgH,EAAA,GAI1DC,EAJ0DD,EAAA,GAW3E,OALAE,oBAAU,WACRX,EAAgB7G,EAAKqB,MACrB+F,EAASpH,EAAKE,OACdqH,EAAYvH,EAAKM,UAAY,KAC5B,IAEDgC,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAOmF,QAAM,EAAC5E,MAAO4C,EAAaiC,aAAa,iBAC7CrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEzB,KAAK,SACL4B,QAAS4D,EACT9D,UAAU,0BAHZ,SAQFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BAAd,YACAH,EAAAC,EAAAC,cAAA,QACEoF,SAAU,SAAA7E,GACRA,EAAE8E,iBACFvB,EAAc,CACZ/F,eACAD,WACAJ,QACAoB,GAAItB,EAAKsB,IAAM,SAInBgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEsF,WAAS,EACTC,YAAY,oBACZtF,UAAU,yBACV2C,MAAO9E,EACP0H,SAAU,SAAAjF,GAAC,OAAIwE,EAAYxE,EAAEkF,OAAO7C,QACpC8C,UAAQ,EACRC,UAAU,QAGd7F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,CACEE,UAAU,yBACV4F,QAAS,CACPC,WAAY,cACZC,YAAa,IAAIpF,KAAK5C,GACtBiI,YAAY,EACZC,WAAW,EACXC,QAAS,SAAAC,GACP9B,EAAgB8B,EAAE,GAAG1H,oBAK7BqB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,wDACVK,MAAO,CAAE5C,MAAK,OAAAwB,OAASxB,EAAMC,EAAf,KAAAuB,OAAoBxB,EAAME,EAA1B,KAAAsB,OAA+BxB,EAAMG,EAArC,MACdU,KAAK,SACL4B,QAAS,kBAAMsE,GAAe,KAJhC,WASDD,GACC1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoG,EAAA,aAAD,CACEzC,MAAM,QACN0C,iBAAkB,SAAAC,GAChB1B,EAAS0B,EAAcC,KACvB9B,GAAe,OAMvB3E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0BAA0B1B,KAAK,UAAjD,UAGCf,EAAKsB,IACJgB,EAAAC,EAAAC,cAAA,UACEC,UAAU,0BACV1B,KAAK,SACL4B,QAAS,kBAAM6D,EAAYxG,EAAKsB,MAHlC,UAQFgB,EAAAC,EAAAC,cAAA,UACEC,UAAU,0BACV1B,KAAK,SACL4B,QAAS4D,GAHX,eCnGGnD,cAhBgB,SAAA1C,GAAK,MAAK,CACvCV,KAAMU,EAAMV,OAGoB,SAAAwD,GAAQ,MAAK,CAC7C8C,cAAe,SAAAtG,GACbwD,ELiBG,SAAuBxD,GAC5B,MAAO,CACLe,KAAM,iBACNf,KAAKmB,OAAAC,EAAA,EAAAD,CAAA,GAAMnB,EAAP,CAAasB,GAAItB,EAAKsB,IAAM0H,IAAQC,cKpB/B3C,CAActG,KAEzBuG,WAAY,WACV/C,ELWK,CAAEzC,KAAM,iBKTfyF,YAAa,SAAAlF,GACXkC,ELsBG,SAAqBlC,GAC1B,MAAO,CAAEP,KAAM,eAAgBO,MKvBpBkF,CAAYlF,OAIV8B,CAGbiD,UCfF6C,IAAMC,cAAc,SAEpB,IAiBeC,EAjBA,SAAAlH,GAAyC,IAAtCnC,EAAsCmC,EAAtCnC,aAAcsJ,EAAwBnH,EAAxBmH,QAASC,EAAepH,EAAfoH,SAKvC,OAJA9B,oBAAU,WAER6B,KACC,IAED/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZ1C,GAAgBuC,EAAAC,EAAAC,cAAC+G,EAAD,CAAOlI,KAAM,IAAI8B,KAAKpD,KACtCuJ,GAAYhH,EAAAC,EAAAC,cAACgH,EAAD,QCHJpG,cAXgB,SAAA1C,GAAK,MAAK,CACvCX,aAAcW,EAAMX,aACpBuJ,SAAU5I,EAAMV,KAAKC,OAGW,SAAAuD,GAAQ,MAAK,CAC7C6F,QAAS,WACP7F,EAASyB,EAAQ,IAAI9B,UAIVC,CAGbgG,GCZIK,EAAQ7H,IAUC8H,EARH,kBACVpH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAUF,MAAOA,GACfnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoH,EAAD,SCNNC,IAASC,OAAOxH,EAAAC,EAAAC,cAACuH,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fa56d05d.chunk.js","sourcesContent":["const initialState = {\r\n  selectedDate: '',\r\n  form: {\r\n    open: false,\r\n    color: { r: 0, g: 0, b: 0 },\r\n    reminder: '',\r\n    reminderDate: '',\r\n  },\r\n  reminders: [],\r\n};\r\n\r\nexport default initialState;\r\n","import initialState from './initialState';\r\n\r\nconst selectedDateReducer = (state = initialState.selectedDate, action = {}) => {\r\n  switch (action.type) {\r\n    case 'DATE_SELECTED':\r\n      return action.date.toUTCString();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectedDateReducer;\r\n","import initialState from './initialState';\r\n\r\nconst formReducer = (state = initialState.form, action = {}) => {\r\n  switch (action.type) {\r\n    case 'FORM_OPENED':\r\n      return {\r\n        ...state,\r\n        open: true,\r\n        time: action.time || '',\r\n        id: '',\r\n      };\r\n    case 'FORM_CLOSED':\r\n    case 'ITEM_DELETED':\r\n    case 'FORM_SUBMITTED':\r\n      return {\r\n        ...initialState.form,\r\n      };\r\n    case 'ITEM_EDITED':\r\n      return {\r\n        open: true,\r\n        time: action.reminder.reminderDate,\r\n        id: action.reminder.id,\r\n        color: action.reminder.color,\r\n        reminder: action.reminder.reminder,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default formReducer;\r\n","import initialState from './initialState';\r\n\r\nconst remindersReducer = (state = initialState.reminders, action = {}) => {\r\n  switch (action.type) {\r\n    case 'FORM_SUBMITTED': {\r\n      return [\r\n        ...state.filter(reminder => reminder.id !== action.form.id),\r\n        {\r\n          ...action.form,\r\n        },\r\n      ];\r\n    }\r\n    case 'ITEM_DELETED': {\r\n      return [\r\n        ...state.filter(reminder => reminder.id !== action.id)\r\n      ]\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default remindersReducer;\r\n","import { combineReducers } from 'redux';\r\nimport selectedDate from './selectedDateReducer';\r\nimport form from './formReducer';\r\nimport reminders from './remindersReducer';\r\n\r\nexport default combineReducers({\r\n  selectedDate,\r\n  form,\r\n  reminders,\r\n});\r\n","import { applyMiddleware, createStore as reduxCreateStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\nimport initialState from '../reducers/initialState';\r\n\r\nconst createStore = () =>\r\n  reduxCreateStore(rootReducer, initialState, applyMiddleware(thunk));\r\nexport default createStore;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\n\r\nimport './day.scss';\r\n\r\nconst Day = ({ addReminder, editItem, day, reminders }) =>\r\n  day.day === 'EMPTY' ? (\r\n    <div className=\"day day--empty\" />\r\n  ) : (\r\n    <div\r\n      role=\"button\"\r\n      onClick={() => addReminder(day.time)}\r\n      className=\"day day__button\"\r\n    >\r\n      {day.day}\r\n      {reminders.length ? (\r\n        <ul className=\"day__reminders\">\r\n          {reminders.map(reminder => (\r\n            <li key={reminder.id}>\r\n              <div\r\n                className=\"day__reminder-item\"\r\n                role=\"button\"\r\n                style={{\r\n                  color: `rgb(${reminder.color.r},${\r\n                    reminder.color.g\r\n                  },${reminder.color.b})`,\r\n                }}\r\n                onClick={e => {\r\n                  editItem(reminder);\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                {format(reminder.reminderDate, 'HH:mm')} {reminder.reminder}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n\r\nDay.propTypes = {\r\n  addReminder: PropTypes.func.isRequired,\r\n  editItem: PropTypes.func.isRequired,\r\n  day: PropTypes.object.isRequired,\r\n  reminders: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Day;\r\n","import { connect } from 'react-redux';\r\nimport { isSameDay } from 'date-fns';\r\nimport Day from './component';\r\nimport { createReminder, editItem } from '../../actions/form';\r\n\r\nconst byDateAscending = (a, b) =>\r\n  new Date(a.reminderDate) - new Date(b.reminderDate);\r\n\r\nexport const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    reminders: state.reminders\r\n      .filter(reminder =>\r\n        isSameDay(new Date(reminder.reminderDate), ownProps.day.time),\r\n      )\r\n      .sort(byDateAscending),\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => ({\r\n  addReminder: time => {\r\n    dispatch(createReminder(time));\r\n  },\r\n  editItem: id => {\r\n    dispatch(editItem(id));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Day);\r\n","import shortid from 'shortid';\nimport {\n  setMilliseconds,\n  setSeconds,\n  setMinutes,\n  setHours,\n  getMinutes,\n  getHours,\n} from 'date-fns';\n\nexport function createReminder(time) {\n  // Set default time of day to now\n  // Rounds up minutes to nearest 5 mins\n  const newTime = setHours(\n    setMinutes(\n      setSeconds(setMilliseconds(time, 0), 0),\n      Math.ceil(getMinutes(new Date()) / 5) * 5,\n    ),\n    getHours(new Date()),\n  );\n  return { type: 'FORM_OPENED', id: null, time: newTime.toUTCString() };\n}\n\nexport function formClosed() {\n  return { type: 'FORM_CLOSED' };\n}\n\nexport function formSubmitted(form) {\n  return {\n    type: 'FORM_SUBMITTED',\n    form: { ...form, id: form.id || shortid.generate() },\n  };\n}\n\nexport function editItem(reminder) {\n  return { type: 'ITEM_EDITED', reminder };\n}\n\nexport function itemDeleted(id) {\n  return { type: 'ITEM_DELETED', id };\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { MdArrowBack, MdArrowForward } from 'react-icons/md';\r\nimport { IconContext } from 'react-icons';\r\n\r\nimport {\r\n  startOfMonth,\r\n  endOfMonth,\r\n  getDay,\r\n  getDate,\r\n  format,\r\n  subMonths,\r\n  addMonths,\r\n  setDate,\r\n} from 'date-fns';\r\nimport Day from '../Day';\r\n\r\nimport './month.scss';\r\n\r\nconst dayNames = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n];\r\n\r\nconst Month = ({ onChangeMonth, time }) => {\r\n  const first = startOfMonth(time);\r\n  const last = endOfMonth(time);\r\n  const paddedDays = [\r\n    ...Array.from(new Array(getDay(first))),\r\n    ...Array.from(new Array(getDate(last)).keys()).map(el => el + 1),\r\n    ...Array.from(new Array(6 - getDay(last))),\r\n  ].map((day, index) => ({\r\n    id: index,\r\n    day: day === undefined ? 'EMPTY' : `${day}`,\r\n    time: setDate(time, day),\r\n  }));\r\n\r\n  return (\r\n    <div className=\"month\">\r\n      <IconContext.Provider value={{ size: '3em' }}>\r\n        <div className=\"month__button-container\">\r\n          <button\r\n            className=\"month__button\"\r\n            type=\"button\"\r\n            onClick={() => onChangeMonth(subMonths(time, 1))}\r\n          >\r\n            <MdArrowBack />\r\n          </button>\r\n        </div>\r\n        <div className=\"month__month-name\">\r\n          <h1>{format(time, 'MMMM YYYY')}</h1>\r\n        </div>\r\n        <div className=\"month__button-container\">\r\n          <button\r\n            className=\"month__button\"\r\n            type=\"button\"\r\n            onClick={() => onChangeMonth(addMonths(time, 1))}\r\n          >\r\n            <MdArrowForward />\r\n          </button>\r\n        </div>\r\n        {dayNames.map(day => (\r\n          <div className=\"month__day-name\" key={day}>\r\n            {day}\r\n          </div>\r\n        ))}\r\n        {paddedDays.map(el => (\r\n          <Day day={el} key={el.id} />\r\n        ))}\r\n      </IconContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nMonth.propTypes = {\r\n  onChangeMonth: PropTypes.func.isRequired,\r\n  time: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Month;\r\n","const setDate = date => {\r\n  return {\r\n    type: 'DATE_SELECTED',\r\n    date,\r\n  };\r\n};\r\n\r\nexport default setDate;\r\n","import { connect } from 'react-redux';\r\nimport Month from './component';\r\nimport setDate from '../../actions/setDate';\r\n\r\nexport const mapStateToProps = state => ({ reminders: state.reminders });\r\n\r\nexport const mapDispatchToProps = dispatch => ({\r\n  onChangeMonth: date => {\r\n    dispatch(setDate(date));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Month);\r\n","/* eslint-disable jsx-a11y/no-autofocus */\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from 'react-modal';\r\nimport { GithubPicker } from 'react-color';\r\nimport Flatpickr from 'react-flatpickr';\r\n\r\nimport './reminder-editor.scss';\r\nimport 'flatpickr/dist/themes/light.css';\r\n\r\nconst modalStyles = {\r\n  content: {\r\n    bottom: 'auto',\r\n    padding: '24px',\r\n    position: 'fixed',\r\n    left: '50%',\r\n    top: '20%',\r\n    right: 'auto',\r\n    transform: 'translate(-50%,-20%)',\r\n    width: '80%',\r\n    maxWidth: '30rem',\r\n  },\r\n};\r\n\r\nconst ReminderEditor = ({ form, formSubmitted, formClosed, itemDeleted }) => {\r\n  const [reminderDate, setReminderDate] = useState(null);\r\n  const [colorPicker, setColorPicker] = useState(false);\r\n  const [color, setColor] = useState({ r: 255, g: 255, b: 255 });\r\n  const [reminder, setReminder] = useState('');\r\n  // If it's new, we get a form.time and form.color(?!)\r\n  useEffect(() => {\r\n    setReminderDate(form.time);\r\n    setColor(form.color);\r\n    setReminder(form.reminder || '');\r\n  }, []);\r\n  return (\r\n    <Modal isOpen style={modalStyles} contentLabel=\"Example Modal\">\r\n      <div className=\"reminder-editor\">\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={formClosed}\r\n            className=\"reminder-editor__close\"\r\n          >\r\n            &times;\r\n          </button>\r\n        </div>\r\n        <h2 className=\"reminder-editor__heading\">Reminder</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            formSubmitted({\r\n              reminderDate,\r\n              reminder,\r\n              color,\r\n              id: form.id || null,\r\n            });\r\n          }}\r\n        >\r\n          <div>\r\n            <input\r\n              autoFocus\r\n              placeholder=\"e.g. Feed the cat\"\r\n              className=\"reminder-editor__input\"\r\n              value={reminder}\r\n              onChange={e => setReminder(e.target.value)}\r\n              required\r\n              maxLength=\"30\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Flatpickr\r\n              className=\"reminder-editor__input\"\r\n              options={{\r\n                dateFormat: 'H:i l j F Y',\r\n                defaultDate: new Date(reminderDate),\r\n                enableTime: true,\r\n                time_24hr: true,\r\n                onClose: d => {\r\n                  setReminderDate(d[0].toUTCString());\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"reminder-editor__button reminder-editor__color-button\"\r\n              style={{ color: `rgb(${color.r},${color.g},${color.b})` }}\r\n              type=\"button\"\r\n              onClick={() => setColorPicker(true)}\r\n            >\r\n              Colour\r\n            </button>\r\n          </div>\r\n          {colorPicker && (\r\n            <div>\r\n              <GithubPicker\r\n                width=\"112px\"\r\n                onChangeComplete={selectedColor => {\r\n                  setColor(selectedColor.rgb);\r\n                  setColorPicker(false);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <button className=\"reminder-editor__button\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n            {form.id && (\r\n              <button\r\n                className=\"reminder-editor__button\"\r\n                type=\"button\"\r\n                onClick={() => itemDeleted(form.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            )}\r\n            <button\r\n              className=\"reminder-editor__button\"\r\n              type=\"button\"\r\n              onClick={formClosed}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nReminderEditor.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  formSubmitted: PropTypes.func.isRequired,\r\n  formClosed: PropTypes.func.isRequired,\r\n  itemDeleted: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ReminderEditor;\r\n","import { connect } from 'react-redux';\r\nimport ReminderEditor from './component';\r\nimport { formSubmitted, formClosed, itemDeleted } from '../../actions/form';\r\n\r\nexport const mapStateToProps = state => ({\r\n  form: state.form,\r\n});\r\n\r\nexport const mapDispatchToProps = dispatch => ({\r\n  formSubmitted: form => {\r\n    dispatch(formSubmitted(form));\r\n  },\r\n  formClosed: () => {\r\n    dispatch(formClosed());\r\n  },\r\n  itemDeleted: id => {\r\n    dispatch(itemDeleted(id));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ReminderEditor);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from 'react-modal';\r\nimport Month from '../Month';\r\nimport ReminderEditor from '../ReminderEditor';\r\n\r\nimport './layout.scss';\r\n\r\nModal.setAppElement('#root'); // TODO is this right?\r\n\r\nconst Layout = ({ selectedDate, onMount, formOpen }) => {\r\n  useEffect(() => {\r\n    // Initially set date to today\r\n    onMount();\r\n  }, []);\r\n  return (\r\n    <div className=\"layout\">\r\n      {selectedDate && <Month time={new Date(selectedDate)} />}\r\n      {formOpen && <ReminderEditor />}\r\n    </div>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  onMount: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","import { connect } from 'react-redux';\r\nimport Layout from './component';\r\nimport setDate from '../../actions/setDate';\r\n\r\nexport const mapStateToProps = state => ({\r\n  selectedDate: state.selectedDate,\r\n  formOpen: state.form.open,\r\n});\r\n\r\nexport const mapDispatchToProps = dispatch => ({\r\n  onMount: () => {\r\n    dispatch(setDate(new Date()));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Layout);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport createStore from './store';\r\nimport './App.css';\r\nimport Layout from './components/Layout';\r\n\r\nconst store = createStore();\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <Layout />\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/* global document */\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}